// <auto-generated />
using System;
using ColTurismoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ColTurismoAPI.Migrations
{
    [DbContext(typeof(ColTurismoContext))]
    [Migration("20220915183849_CampofotoTurista")]
    partial class CampofotoTurista
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ColTurismoAPI.Entities.ContratoSucursal", b =>
                {
                    b.Property<int>("CodSucursal")
                        .HasColumnType("int");

                    b.Property<int>("CodTurista")
                        .HasColumnType("int");

                    b.HasKey("CodSucursal", "CodTurista");

                    b.HasIndex("CodTurista");

                    b.ToTable("ContratoSucursal");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.Hotel", b =>
                {
                    b.Property<int>("CodHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodHotel"), 1L, 1);

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumPlazas")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CodHotel");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.ReservaHotel", b =>
                {
                    b.Property<int>("CodTurista")
                        .HasColumnType("int");

                    b.Property<int>("CodHotel")
                        .HasColumnType("int");

                    b.Property<int>("CodReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodReserva"), 1L, 1);

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Regimen")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CodTurista", "CodHotel");

                    b.HasIndex("CodHotel");

                    b.ToTable("ReservaHotel");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.ReservaVuelo", b =>
                {
                    b.Property<int>("NumeroVuelo")
                        .HasColumnType("int");

                    b.Property<int>("CodTurista")
                        .HasColumnType("int");

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NumeroVuelo", "CodTurista");

                    b.HasIndex("CodTurista");

                    b.ToTable("ReservaVuelo");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.Sucursal", b =>
                {
                    b.Property<int>("CodSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodSucursal"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CodSucursal");

                    b.ToTable("Sucursal");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.Turista", b =>
                {
                    b.Property<int>("CodTurista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTurista"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CodTurista");

                    b.ToTable("Turista");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.Vuelo", b =>
                {
                    b.Property<int>("NumeroVuelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroVuelo"), 1L, 1);

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PlazaTotal")
                        .HasColumnType("int");

                    b.Property<int>("PlazaTurista")
                        .HasColumnType("int");

                    b.HasKey("NumeroVuelo");

                    b.ToTable("Vuelo");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.ContratoSucursal", b =>
                {
                    b.HasOne("ColTurismoAPI.Entities.Sucursal", "Sucursal")
                        .WithMany("Contratos")
                        .HasForeignKey("CodSucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColTurismoAPI.Entities.Turista", "Turista")
                        .WithMany("Contratos")
                        .HasForeignKey("CodTurista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");

                    b.Navigation("Turista");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.ReservaHotel", b =>
                {
                    b.HasOne("ColTurismoAPI.Entities.Hotel", "Hotel")
                        .WithMany("ReservaHotel")
                        .HasForeignKey("CodHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColTurismoAPI.Entities.Turista", "Turista")
                        .WithMany("Hoteles")
                        .HasForeignKey("CodTurista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Turista");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.ReservaVuelo", b =>
                {
                    b.HasOne("ColTurismoAPI.Entities.Turista", "Turista")
                        .WithMany("Vuelos")
                        .HasForeignKey("CodTurista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColTurismoAPI.Entities.Vuelo", "Vuelo")
                        .WithMany("ReservaVuelo")
                        .HasForeignKey("NumeroVuelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turista");

                    b.Navigation("Vuelo");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.Hotel", b =>
                {
                    b.Navigation("ReservaHotel");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.Sucursal", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.Turista", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("Hoteles");

                    b.Navigation("Vuelos");
                });

            modelBuilder.Entity("ColTurismoAPI.Entities.Vuelo", b =>
                {
                    b.Navigation("ReservaVuelo");
                });
#pragma warning restore 612, 618
        }
    }
}
